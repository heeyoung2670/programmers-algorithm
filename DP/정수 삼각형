#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(vector<vector<int>> triangle) {
	int answer = 0;

	vector<int> ans[501];
	ans[0].push_back(triangle[0][0]);
	for (int i = 1; i < triangle.size(); i++) {
		vector<int> v;
		for (int j = 0; j < triangle[i].size(); j++) {
			if (j == 0) {
				v.push_back(ans[i - 1][j] + triangle[i][j]);
			}
			else if (j == i) {
				v.push_back(ans[i - 1][j - 1] + triangle[i][j]);
			}
			else {
				v.push_back(max(ans[i - 1][j], ans[i - 1][j - 1]) + triangle[i][j]);
			}
		}
		ans[i] = v;
	}

	for (auto iter: ans[triangle.size()-1]) {
		answer = max(answer, iter);
	}

	return answer;
}
