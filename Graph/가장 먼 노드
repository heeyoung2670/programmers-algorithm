#include <string>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

int solution(int n, vector<vector<int>> edge) {
    int answer = 0;
    
    vector<int> v[20001];
    for(int i = 0; i < edge.size(); i++){
        v[edge[i][0]].push_back(edge[i][1]);
        v[edge[i][1]].push_back(edge[i][0]);
    }
    
    queue<int> q; //노드 번호
    int visited[20001];
    int max_depth = 0;
    
    q.push(1);
    visited[1] = 1;
    while(!q.empty()){
        int node = q.front();
        q.pop();
        
        for(int i = 0; i < v[node].size(); i++){
            if(visited[v[node][i]] == 0){
                q.push(v[node][i]);
                visited[v[node][i]] = visited[node] + 1;
                max_depth = max(max_depth, visited[v[node][i]]);
            }
        }
    }
    
    for(int i = 1; i <= n; i++){
        if(visited[i] == max_depth){
            answer++;
        }
    }
    
    return answer;
}
